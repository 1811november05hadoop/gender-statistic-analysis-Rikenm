package com.revature.map;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;

import org.apache.hadoop.io.DoubleWritable;
//import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

public class WordCountMapper extends Mapper<LongWritable, Text, Text,DoubleWritable>{
	
	public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException  {
		
		
		
		
		String line = value.toString();
		
		//splits on any white space

		String[] data = line.split("\",");
		
		if(line.matches("(.*)SG.LAW.OBHB.MR(.*)")){
			
			String country = data[0].replace("\"", "");
			
			
				String word = data[data.length-1];
				if(!word.equals("\"")){
		
					String valueWithoutQuotes = word.replace("\"", "");	
					if(Integer.parseInt(valueWithoutQuotes) == 0){							
						context.write(new Text(country),new DoubleWritable(1.0));
					}

				}
			
				
		}
		
		if(line.matches("(.*)SG.LEG.MRRP(.*)")){
					
						String country = data[0].replace("\"", "");
						String word = data[data.length-1];
						if(!word.equals("\"")){
				
							
							
							String valueWithoutQuotes = word.replace("\"", "");	
							
							if(Integer.parseInt(valueWithoutQuotes) == 1){							
								context.write(new Text(country),new DoubleWritable(1.0));
							}
		
						}
					
						
		}
		

	}
}
